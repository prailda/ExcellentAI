#РЕГЛАМЕНТ ПО ОПРЕДЕЛЕНИЮ УРОВНЯ СЛОЖНОСТИ ПРОЕКТА

1. Низкая сложность
Состав: Элементарные (фундаментальные) компоненты – отдельные поля, методы, свойства, события, константы, переменные, а также эмерджентные компоненты (объекты, коллекции).
Описание: Работа идёт с отдельными методами, свойствами и событиями, выполняется минимальное количество операций.
Пример: Вызов Workbooks.Add или обращение к свойству Workbook.Name.
Регламент: Специальный регламент не требуется.
Бюджетирование: 2 шага.

2. Небольшая сложность
Состав: Программы, которые могут быть как тривиальными, так и нетривиальными.
Тривиальные программы – односложные функции, процедуры или скрипты, использующие элементарные и/или эмерджентные компоненты.
Нетривиальные программы – объединяют несколько тривиальных подсистем (дочерних программ) для реализации функции, включают дополнительные операции (валидация, логирование и т.д.).
Пример:
Тривиальная программа – функция, создающая книгу с помощью одного метода (простое создание книги).
Нетривиальная программа – процедура, создающая новый лист, которая кроме добавления листа также выполняет валидацию, логирование и добавление книги в глобальную коллекцию.
Регламент: Используется шаблон небольшой программы.
Бюджетирование: 4 шага.

3. Средняя сложность
Состав: Классы и паттерны проектирования.
Описание: Разрабатываются объекты, которые инкапсулируют и группируют связанные функции (как тривиальные, так и нетривиальные). Создаётся класс, объединяющий логику работы с документом, реализующий события, методы и управляющий отдельными подсистемами. Также применяются паттерны (например, Singleton, Factory, Observer) для организации работы и улучшения структуры кода.
Пример: Класс, реализующий паттерн LogFactory.
Регламент: Применяется регламент планирования и разработки для проектов средней сложности.
Бюджетирование: 10 шагов.

4. Большая сложность
Состав: Модули и библиотеки.
Описание: Формируются архитектурные единицы, которые содержат наборы классов или самостоятельных компонентов, объединённых для выполнения специализированной задачи. Это набор инструментов (например, для логирования, обеспечения безопасности, валидации), которые будут взаимосвязаны и переиспользуемы.
Пример: Модуль системы логирования, включающий классы для логирования, провайдеры для работы с файлами, настройки и конфигурацию, или библиотека системы безопасности, объединяющая модули валидации, обработки ошибок и проверки доступа.
Регламент: Применяется регламент планирования и разработки для проектов большой сложности.
Бюджетирование: 20 шагов.

5. Очень большая сложность
Состав: Интегрированное приложение.
Описание: Создаётся полноценное конечное решение, объединяющее модули, библиотеки и классы. Такое решение включает различные компоненты (например, логирование, безопасность, отчётность) и предназначено для решения комплексной задачи.
Пример: Приложение для управления файловой системой Windows.
Регламент: Применяется регламент планирования и разработки для проектов очень большой сложности.
